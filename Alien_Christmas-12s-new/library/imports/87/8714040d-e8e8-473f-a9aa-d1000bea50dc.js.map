{"version":3,"sources":["assets\\Scripts\\TestLazer.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;;;;;;;;;;;;;;;;;;;;;AAE5E,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAAsC,4BAAY;IAAlD;QAAA,qEA0DC;QAvDG,UAAI,GAAS,IAAI,CAAA;QAEjB,UAAI,GAAW,OAAO,CAAC;QAEvB,WAAK,GAAY,IAAI,CAAC;QAEtB,cAAQ,GAAW,CAAC,CAAC;QAEpB,UAAI,GAAS,GAAG,CAAC;;IA+CtB,CAAC;IA9CG,wBAAwB;IAEvB,yBAAM,GAAN;QACI,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,EAAE,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAChD,IAAI,OAAO,GAAE,EAAE,CAAC,QAAQ,CAAC,mBAAmB,EAAE,CAAC;QAC/C,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAClB,8DAA8D;IACnE,CAAC;IACD,wBAAwB;IACxB,yCAAyC;IACzC,KAAK;IACL,wBAAK,GAAL;IAEA,CAAC;IACD,mCAAgB,GAAhB,UAAiB,aAAa,EAAE,YAAY;QAExC,IAAI,QAAQ,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QACvB,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QACvC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QACvC,IAAI,UAAU,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QACzB,UAAU,CAAC,CAAC,GAAG,YAAY,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QACjD,UAAU,CAAC,CAAC,GAAG,YAAY,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QACjD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,GAAG,EAAE,CAAC;QAC/C,+CAA+C;QAC/C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3B,2BAA2B;IAC/B,CAAC;IACD,yBAAM,GAAN,UAAO,EAAE;QAEL,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE;YAC3B,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC;YAC/B,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,EAAC,IAAI,CAAC,IAAI,CAAC,CAAA;SAExC;aAAM;YACH,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAA;YACzB,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,EAAC,IAAI,CAAC,IAAI,CAAC,CAAA;SACzC;QACD,sCAAsC;QACtC,iCAAiC;QAEjC,oBAAoB;QACpB,wCAAwC;QACxC,IAAI;IAER,CAAC;IAtDD;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;0CACD;IAEjB;QADC,QAAQ;0CACc;IAEvB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;2CACI;IAEtB;QADC,QAAQ;8CACY;IAEpB;QADA,QAAQ;0CACS;IAXD,QAAQ;QAD5B,OAAO;OACa,QAAQ,CA0D5B;IAAD,eAAC;CA1DD,AA0DC,CA1DqC,EAAE,CAAC,SAAS,GA0DjD;kBA1DoB,QAAQ","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class NewClass extends cc.Component {\n\n    @property(cc.Node)\n    Ship:cc.Node=null\n    @property\n    text: string = 'hello';\n    @property(cc.Node)\n    Laser: cc.Node = null;\n    @property\n    distance: number = 0;\n    @property\n     line:number =400;\n    // LIFE-CYCLE CALLBACKS:\n\n     onLoad () {\n         this.node.setContentSize(45, cc.winSize.height);\n         var manager= cc.director.getCollisionManager();    \n         manager.enabled = true;\n         this.distance = 0;\n         //this.schedule(this.setHEIGHT, 0.1, cc.macro.REPEAT_FOREVER);\n    }\n    // setHEIGHT(distance) {\n    //     this.node.setContentSize(45, 400);\n    //  }\n    start () {\n\n    }\n    onCollisionEnter(otherCollider, selfCollider) { \n       \n        var endPoint = cc.v2();\n        endPoint.x = this.Ship.getPosition().x;\n        endPoint.y = this.Ship.getPosition().y;\n        var startPoint = cc.v2();\n        startPoint.x = selfCollider.node.getPosition().x;\n        startPoint.y = selfCollider.node.getPosition().y;\n        this.distance = endPoint.sub(startPoint).mag();\n        //console.log(selfCollider.node.getPosition());\n        console.log(this.distance);\n        //this.setHEIGHT(distance);\n    }\n    update(dt) {\n      \n        if (this.line > this.distance) {\n            this.line = cc.winSize.height;\n           this.node.setContentSize(45,this.line)\n        \n        } else {\n            this.line = this.distance\n            this.node.setContentSize(45,this.line)\n        }\n        //this.node.setScale(1, this.line/50);\n        //console.log(cc.winSize.height);\n        \n        // if (this.X<=50) {\n        //     this.Laser.scaleY+=this.X * dt ; \n        // }\n       \n    }\n}\n"]}