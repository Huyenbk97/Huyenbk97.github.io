{"version":3,"sources":["assets\\Scripts\\Bullet.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class NewClass extends cc.Component {\n    @property(cc.Node)\n    Cavas: Node = null;\n    @property\n    bulletTime: number = 100;\n    @property\n    BulletSpeed:number =1000;\n    @property\n    radianNumber: number = 75;\n    // LIFE-CYCLE CALLBACKS:\n    @property\n    rotation: number = 0;\n    // onLoad () {}\n    start () {\n\n    }\n   update(dt) {\n       \n       if (window.matchMedia(\"(orientation: portrait)\").matches) {\n           this.node.setRotation(this.rotation);\n           this.node.setScale(1.4, 1.4);\n           for (let radianNumber=90; radianNumber <100; radianNumber++) {\n            let radian = this.radianNumber / 360 * 2 * Math.PI;\n            this.bulletTime -= 3.5;\n            this.node.setPosition(this.node.position.x += Math.cos(radian) * dt * this.BulletSpeed, this.node.position.y += Math.sin(radian) * this.BulletSpeed * dt);\n            if (this.bulletTime == 0) {\n                this.node.destroy();\n                //this.node.position.y = this.node.position.y + 5;\n            }\n               if (this.radianNumber==100) {\n                   this.radianNumber = 90;\n               }\n           }\n   \n       }\n       if (window.matchMedia(\"(orientation: landscape)\").matches) { \n        this.node.setRotation(this.rotation);\n           this.node.setScale(0.8,0.8);\n        let radian = this.radianNumber / 360 * 2 * Math.PI;\n        this.bulletTime -= 3.5;\n        this.node.setPosition(this.node.position.x += Math.cos(radian) * dt * this.BulletSpeed, this.node.position.y += Math.sin(radian) * this.BulletSpeed * dt);\n        if (this.bulletTime == 0) {\n            this.node.destroy();\n            //this.node.position.y = this.node.position.y + 5;\n        }\n       }\n       }\n    // update (dt) {}\n}\n"]}